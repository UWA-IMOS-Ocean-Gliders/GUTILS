name: Release

on:
 release:
  types: [published]

env:
  BUILDX_CACHE: /tmp/.buildx-tag-cache
  CACHE_KEY: gutils-buildx-tag-

jobs:
  build:
    name: Build and test Docker Image
    runs-on: ubuntu-20.04
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      #continue-on-error: true
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build release
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: docker/build-push-action@v2
      with:
        push: false
        tags: axiom/gutils:${{ github.event.release.tag_name }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
        outputs: type=docker

    - name: Run tests from the Docker image
      run: docker run axiom/gutils:${{ github.event.release.tag_name }} pytest

  push:
    name: Push tagged image to Docker Hub
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: ${ BUILDX_CACHE }
        key: ${ CACHE_KEY }${{ github.sha }}
        restore-keys: |
          ${ CACHE_KEY }

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push tagged image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: axiom/gutils:${{ github.event.release.tag_name }}
        cache-from: type=local,src=${ BUILDX_CACHE }
        cache-to: type=local,dest=${ BUILDX_CACHE }
