<dataset type="EDDTableFromNcFiles" datasetID="{{ deployment_name }}" active="true">
    <reloadEveryNMinutes>10000000</reloadEveryNMinutes>
    <updateEveryNMillis>-1</updateEveryNMillis>
    <fileDir>{{ deployment_directory }}</fileDir>
    <recursive>false</recursive>
    <fileNameRegex>.*\.nc</fileNameRegex>
    <metadataFrom>last</metadataFrom>
    <sortedColumnSourceName>time</sortedColumnSourceName>
    <sortFilesBySourceNames>trajectory time</sortFilesBySourceNames>
    <fileTableInMemory>false</fileTableInMemory>

    <addAttributes>
        <att name="cdm_data_type">trajectoryProfile</att>
        <att name="featureType">trajectoryProfile</att>
        <att name="cdm_trajectory_variables">trajectory</att>
        <att name="cdm_profile_variables">profile_id,time,latitude,longitude</att>
        <att name="subsetVariables">trajectory,profile_id,time,latitude,longitude</att>
        <att name="Conventions">Unidata Dataset Discovery v1.0, COARDS, CF-1.6</att>
        <att name="keywords">AUVS > Autonomous Underwater Vehicles, Oceans > Ocean Pressure > Water Pressure, Oceans > Ocean Temperature > Water Temperature, Oceans > Salinity/Density > Conductivity, Oceans > Salinity/Density > Density, Oceans > Salinity/Density > Salinity, glider, In Situ Ocean-based platforms > Seaglider, Spray, Slocum, trajectory, underwater glider, water, wmo</att>
        <att name="keywords_vocabulary">GCMD Science Keywords</att>
        <att name="Metadata_Conventions">Unidata Dataset Discovery v1.0, COARDS, CF-1.6</att>
        <att name="sourceUrl">(local files)</att>
        <att name="title">{{ deployment_name }}</att>
        <att name="infoUrl">https://axiomdatascience.com</att>
    </addAttributes>
    {%- for varname, varobj in deployment_variables.items() %}
    {%- if ( (destination_mapping.get(varname, varname)|truncate(11, False, '', 0) != 'instrument_') and
             (destination_mapping.get(varname, varname)|truncate(5, False, '', 0) != 'meta_')) %}
    <dataVariable>
        <sourceName>{{ varname }}</sourceName>
        <destinationName>{{ destination_mapping.get(varname, varname) }}</destinationName>
        <dataType>{{ datatype_mapping.get(varobj.dtype) }}</dataType>
        {%- if 'ioos_category' not in varobj.ncattrs() %}
        <addAttributes>
            <att name="ioos_category">Other</att>
        </addAttributes>
        {%- endif %}
    </dataVariable>
    {% endif %}
    {%- endfor %}
</dataset>
